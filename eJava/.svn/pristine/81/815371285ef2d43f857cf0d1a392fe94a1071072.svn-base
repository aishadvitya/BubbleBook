/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package com.iss.bubble.entity;

import java.util.Date;
import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.DiscriminatorColumn;
import javax.persistence.DiscriminatorValue;
import javax.persistence.Entity;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import javax.xml.bind.annotation.XmlRootElement;

/**
 *
 * @author Sathish
 */
@Entity
@DiscriminatorColumn(name="BUBBLE_TYPE")
@DiscriminatorValue("EVENT")
@PrimaryKeyJoinColumn(name = "BUBBLE_ID")
@Table(name = "BUBBLE_EVENT",schema = "EJAVA")
@XmlRootElement
@NamedQueries({
    @NamedQuery(name = "BubbleEvent.findAll", query = "SELECT b FROM BubbleEvent b"),
    @NamedQuery(name = "BubbleEvent.findByBubbleId", query = "SELECT b FROM BubbleEvent b WHERE b.bubbleId = :bubbleId"),
    @NamedQuery(name = "BubbleEvent.findByTitle", query = "SELECT b FROM BubbleEvent b WHERE b.title = :title"),
    //@NamedQuery(name = "BubbleEvent.findByDescription", query = "SELECT b FROM BubbleEvent b WHERE b.description = :description"),
    @NamedQuery(name = "BubbleEvent.findByUserId", query = "SELECT b FROM BubbleEvent b WHERE b.userId = :userId"),
    //@NamedQuery(name = "BubbleEvent.findByLocationLat", query = "SELECT b FROM BubbleEvent b WHERE b.locationLat = :locationLat"),
   // @NamedQuery(name = "BubbleEvent.findByLocationLon", query = "SELECT b FROM BubbleEvent b WHERE b.locationLon = :locationLon"),
    @NamedQuery(name = "BubbleEvent.findByStartdatetime", query = "SELECT b FROM BubbleEvent b WHERE b.startdatetime = :startdatetime"),
    @NamedQuery(name = "BubbleEvent.findByEnddatetime", query = "SELECT b FROM BubbleEvent b WHERE b.enddatetime = :enddatetime"),
    @NamedQuery(name = "BubbleEvent.findByMaybeCount", query = "SELECT b FROM BubbleEvent b WHERE b.maybeCount = :maybeCount"),
    @NamedQuery(name = "BubbleEvent.findByNotgoingCount", query = "SELECT b FROM BubbleEvent b WHERE b.notgoingCount = :notgoingCount"),
    @NamedQuery(name = "BubbleEvent.findByGoingCount", query = "SELECT b FROM BubbleEvent b WHERE b.goingCount = :goingCount"),
    @NamedQuery(name = "BubbleEvent.findByCreateTimestamp", query = "SELECT b FROM BubbleEvent b WHERE b.createTimestamp = :createTimestamp")})
public class BubbleEvent extends Bubble{
//    @Id
//    @Basic(optional = false)
//    @NotNull
//    @Column(name = "BUBBLE_ID", nullable = false)
//    private Integer bubbleId;
//    @JoinColumn(name = "BUBBLE_ID", referencedColumnName = "BUBBLE_ID", nullable = false, insertable = false, updatable = false)
//    @OneToOne(optional = false)
//    private Bubble bubble;
//    private static final long serialVersionUID = 1L;
//    @Id
//    @Basic(optional = false)
//    @NotNull
//    @Column(name = "BUBBLE_ID")
//    private Integer bubbleId;
    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 50)
    @Column(name = "TITLE")
    private String title;
//    @Basic(optional = false)
//    @NotNull
//    @Size(min = 1, max = 50)
//    @Column(name = "DESCRIPTION")
//    private String description;
//    @Basic(optional = false)
//    @NotNull
//    @Column(name = "USER_ID")
//    private int userId;
    // @Max(value=?)  @Min(value=?)//if you know range of your decimal fields consider using these annotations to enforce field validation
//    @Column(name = "LOCATION_LAT")
//    private Double locationLat;
//    @Column(name = "LOCATION_LON")
//    private Double locationLon;
    @Basic(optional = false)
    @NotNull
    @Column(name = "STARTDATETIME")
    @Temporal(TemporalType.TIMESTAMP)
    private Date startdatetime;
    @Basic(optional = false)
    @NotNull
    @Column(name = "ENDDATETIME")
    @Temporal(TemporalType.TIMESTAMP)
    private Date enddatetime;
    @Basic(optional = false)
    @NotNull
    @Column(name = "MAYBE_COUNT")
    private int maybeCount;
    @Basic(optional = false)
    @NotNull
    @Column(name = "NOTGOING_COUNT")
    private int notgoingCount;
    @Basic(optional = false)
    @NotNull
    @Column(name = "GOING_COUNT")
    private int goingCount;
//    @Basic(optional = false)
//    @NotNull
//    @Column(name = "CREATE_TIMESTAMP")
//    @Temporal(TemporalType.TIMESTAMP)
//    private Date createTimestamp;
//    @JoinColumn(name = "BUBBLE_ID", referencedColumnName = "BUBBLE_ID", insertable = false, updatable = false)
//    @OneToOne(optional = false)
//    private Bubble bubble;

    public BubbleEvent() {
    }

    public BubbleEvent(Integer bubbleId) {
        this.bubbleId = bubbleId;
    }

    public BubbleEvent(String title, Date startdatetime, Date enddatetime, int maybeCount, int notgoingCount, int goingCount) {
        //this.bubbleId = bubbleId;
        this.title = title;
        //this.description = description;
        //this.userId = userId;
        this.startdatetime = startdatetime;
        this.enddatetime = enddatetime;
        this.maybeCount = maybeCount;
        this.notgoingCount = notgoingCount;
        this.goingCount = goingCount;
        //this.createTimestamp = createTimestamp;
    }

//    public Integer getBubbleId() {
//        return bubbleId;
//    }
//
//    public void setBubbleId(Integer bubbleId) {
//        this.bubbleId = bubbleId;
//    }

    public String getTitle() {
        return title;
    }

    public void setTitle(String title) {
        this.title = title;
    }

//    public String getDescription() {
//        return description;
//    }
//
//    public void setDescription(String description) {
//        this.description = description;
//    }

//    public int getUserId() {
//        return userId;
//    }
//
//    public void setUserId(int userId) {
//        this.userId = userId;
//    }

//    public Double getLocationLat() {
//        return locationLat;
//    }
//
//    public void setLocationLat(Double locationLat) {
//        this.locationLat = locationLat;
//    }
//
//    public Double getLocationLon() {
//        return locationLon;
//    }
//
//    public void setLocationLon(Double locationLon) {
//        this.locationLon = locationLon;
//    }

    public Date getStartdatetime() {
        return startdatetime;
    }

    public void setStartdatetime(Date startdatetime) {
        this.startdatetime = startdatetime;
    }

    public Date getEnddatetime() {
        return enddatetime;
    }

    public void setEnddatetime(Date enddatetime) {
        this.enddatetime = enddatetime;
    }

    public int getMaybeCount() {
        return maybeCount;
    }

    public void setMaybeCount(int maybeCount) {
        this.maybeCount = maybeCount;
    }

    public int getNotgoingCount() {
        return notgoingCount;
    }

    public void setNotgoingCount(int notgoingCount) {
        this.notgoingCount = notgoingCount;
    }

    public int getGoingCount() {
        return goingCount;
    }

    public void setGoingCount(int goingCount) {
        this.goingCount = goingCount;
    }

//    public Date getCreateTimestamp() {
//        return createTimestamp;
//    }
//
//    public void setCreateTimestamp(Date createTimestamp) {
//        this.createTimestamp = createTimestamp;
//    }

//    public Bubble getBubble() {
//        return bubble;
//    }
//
//    public void setBubble(Bubble bubble) {
//        this.bubble = bubble;
//    }

//    @Override
//    public int hashCode() {
//        int hash = 0;
//        hash += (bubbleId != null ? bubbleId.hashCode() : 0);
//        return hash;
//    }
//
//    @Override
//    public boolean equals(Object object) {
//        // TODO: Warning - this method won't work in the case the id fields are not set
//        if (!(object instanceof BubbleEvent)) {
//            return false;
//        }
//        BubbleEvent other = (BubbleEvent) object;
//        if ((this.bubbleId == null && other.bubbleId != null) || (this.bubbleId != null && !this.bubbleId.equals(other.bubbleId))) {
//            return false;
//        }
//        return true;
//    }

    @Override
    public String toString() {
        return "com.iss.bubble.entity.BubbleEvent[ bubbleId=" + bubbleId + " ]";
    }

//    public Bubble getBubble() {
//        return bubble;
//    }
//
//    public void setBubble(Bubble bubble) {
//        this.bubble = bubble;
//    }

//    @Override
//    public int hashCode() {
//        int hash = 0;
//        hash += (bubbleId != null ? bubbleId.hashCode() : 0);
//        return hash;
//    }
//
//    @Override
//    public boolean equals(Object object) {
//        // TODO: Warning - this method won't work in the case the id fields are not set
//        if (!(object instanceof BubbleEvent)) {
//            return false;
//        }
//        BubbleEvent other = (BubbleEvent) object;
//        if ((this.bubbleId == null && other.bubbleId != null) || (this.bubbleId != null && !this.bubbleId.equals(other.bubbleId))) {
//            return false;
//        }
//        return true;
//    }

    
}
