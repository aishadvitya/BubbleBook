/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.iss.bubble.entity;

import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.DiscriminatorColumn;
import javax.persistence.DiscriminatorValue;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import javax.xml.bind.annotation.XmlRootElement;

/**
 *
 * @author Sathish
 */
@Entity
@DiscriminatorColumn(name = "BUUBLE_TYPE")
@DiscriminatorValue("MAP")
@PrimaryKeyJoinColumn(name = "BUBBLE_ID")
@Table(name = "BUBBLE_MAP", schema = "EJAVA")
@XmlRootElement
@NamedQueries({
    @NamedQuery(name = "BubbleMap.findAll", query = "SELECT b FROM BubbleMap b"),
    @NamedQuery(name = "BubbleMap.findByBubbleId", query = "SELECT b FROM BubbleMap b WHERE b.bubbleId = :bubbleId"), //@NamedQuery(name = "BubbleMap.findByLatlong", query = "SELECT b FROM BubbleMap b WHERE b.latlong = :latlong")
})
public class BubbleMap extends Bubble {
//    @Id
//    @Basic(optional = false)
//    @NotNull
//    @Column(name = "BUBBLE_ID", nullable = false)
//    private Integer bubbleId;
//    @JoinColumn(name = "BUBBLE_ID", referencedColumnName = "BUBBLE_ID", nullable = false, insertable = false, updatable = false)
//    @OneToOne(optional = false)
//    private Bubble bubble;
//    private static final long serialVersionUID = 1L;
//    @Id
//    @Basic(optional = false)
//    @NotNull
//    @Column(name = "BUBBLE_ID")
//    private Integer bubbleId;

    @Basic(optional = false)
    @NotNull
    @Column(name = "LOCATION_LAT")
    private Double locationLat;
    @Basic(optional = false)
    @NotNull
    @Column(name = "LOCATION_LON")
    private Double locationLon;
//    @JoinColumn(name = "BUBBLE_ID", referencedColumnName = "BUBBLE_ID", insertable = false, updatable = false)
//    @OneToOne(optional = false)
//    private Bubble bubble;

    public BubbleMap() {
    }

    public BubbleMap(Integer bubbleId) {
        this.bubbleId = bubbleId;
    }

    public BubbleMap(Integer bubbleId, Double locationLat, Double locationLon) {
        this.bubbleId = bubbleId;
        this.locationLat = locationLat;
        this.locationLon = locationLon;
    }

    public BubbleMap(Double locationLat, Double locationLon) {
        this.locationLat = locationLat;
        this.locationLon = locationLon;
    }

    public BubbleMap(Double[] locationLatLon) {
        this.locationLat = locationLatLon[0];
        this.locationLon = locationLatLon[1];
    }

    public Double getLocationLon() {
        return locationLon;
    }

    public void setLocationLon(Double locationLon) {
        this.locationLon = locationLon;
    }

    public Double getLocationLat() {
        return locationLat;
    }

    public void setLocationLat(Double locationLat) {
        this.locationLat = locationLat;
    }

//    public Bubble getBubble() {
//        return bubble;
//    }
//
//    public void setBubble(Bubble bubble) {
//        this.bubble = bubble;
//    }
//    @Override
//    public int hashCode() {
//        int hash = 0;
//        hash += (bubbleId != null ? bubbleId.hashCode() : 0);
//        return hash;
//    }
//
//    @Override
//    public boolean equals(Object object) {
//        // TODO: Warning - this method won't work in the case the id fields are not set
//        if (!(object instanceof BubbleMap)) {
//            return false;
//        }
//        BubbleMap other = (BubbleMap) object;
//        if ((this.bubbleId == null && other.bubbleId != null) || (this.bubbleId != null && !this.bubbleId.equals(other.bubbleId))) {
//            return false;
//        }
//        return true;
//    }
    @Override
    public String toString() {
        return "com.iss.bubble.entity.BubbleMap[ bubbleId=" + bubbleId + " ]";
    }
//    public Bubble getBubble() {
//        return bubble;
//    }
//
//    public void setBubble(Bubble bubble) {
//        this.bubble = bubble;
//    }
//    @Override
//    public int hashCode() {
//        int hash = 0;
//        hash += (bubbleId != null ? bubbleId.hashCode() : 0);
//        return hash;
//    }
//
//    @Override
//    public boolean equals(Object object) {
//        // TODO: Warning - this method won't work in the case the id fields are not set
//        if (!(object instanceof BubbleMap)) {
//            return false;
//        }
//        BubbleMap other = (BubbleMap) object;
//        if ((this.bubbleId == null && other.bubbleId != null) || (this.bubbleId != null && !this.bubbleId.equals(other.bubbleId))) {
//            return false;
//        }
//        return true;
//    }
}
